{"mappings":"ACEA,SAAS,EAAY,CAAY,EAC/B,OAAO,WAAW,EAAa,OAAO,CAAC,QAAS,IAClD,CA0BA,IAvBQ,EAuBF,EAAe,SAAS,aAAa,CAAC,MArB1C,CAFM,EAAQ,MAAM,IAAI,CAAC,AAyBlB,EAzBuB,QAAQ,GAEhC,IAAI,CAAC,SAAC,CAAA,CAAG,CAAf,EACE,IAAM,EAAU,EAAY,EAAE,YAAY,CAAC,gBAG3C,OAAO,AAFS,EAAY,EAAE,YAAY,CAAC,gBAE1B,CACnB,GAEA,EAAM,OAAO,CAAC,SAAC,CAAf,EAAwB,OAAA,AAgBjB,EAhBsB,WAAW,CAAC,E,GAIlC,MAAM,IAAI,CAAC,AAaP,EAbY,QAAQ,EAAE,GAAG,CAAC,SAAC,CAAtC,EACE,MAAO,CACL,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAU,EAAK,YAAY,CAAC,iBAC5B,OAAQ,EAAY,EAAK,YAAY,CAAC,gBACtC,IAAK,EAAK,YAAY,CAAC,WACzB,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction parseSalary(salaryString) {\n    return parseFloat(salaryString.replace(/[$,]/g, \"\"));\n}\nfunction sortList(list) {\n    var items = Array.from(list.children);\n    items.sort(function(a, b) {\n        var salaryA = parseSalary(a.getAttribute(\"data-salary\"));\n        var salaryB = parseSalary(b.getAttribute(\"data-salary\"));\n        return salaryB - salaryA;\n    });\n    items.forEach(function(elem) {\n        return list.appendChild(elem);\n    });\n}\nfunction getEmployees(list) {\n    return Array.from(list.children).map(function(item) {\n        return {\n            name: item.textContent.trim(),\n            position: item.getAttribute(\"data-position\"),\n            salary: parseSalary(item.getAttribute(\"data-salary\")),\n            age: item.getAttribute(\"data-age\")\n        };\n    });\n}\nvar employeeList = document.querySelector(\"ul\");\nsortList(employeeList);\ngetEmployees(employeeList);\n\n//# sourceMappingURL=index.fc0b07b1.js.map\n","'use strict';\n\nfunction parseSalary(salaryString) {\n  return parseFloat(salaryString.replace(/[$,]/g, ''));\n}\n\nfunction sortList(list) {\n  const items = Array.from(list.children);\n\n  items.sort((a, b) => {\n    const salaryA = parseSalary(a.getAttribute('data-salary'));\n    const salaryB = parseSalary(b.getAttribute('data-salary'));\n\n    return salaryB - salaryA;\n  });\n\n  items.forEach((elem) => list.appendChild(elem));\n}\n\nfunction getEmployees(list) {\n  return Array.from(list.children).map((item) => {\n    return {\n      name: item.textContent.trim(),\n      position: item.getAttribute('data-position'),\n      salary: parseSalary(item.getAttribute('data-salary')),\n      age: item.getAttribute('data-age'),\n    };\n  });\n}\n\nconst employeeList = document.querySelector('ul');\n\nsortList(employeeList);\ngetEmployees(employeeList);\n"],"names":["parseSalary","salaryString","parseFloat","replace","items","employeeList","document","querySelector","Array","from","list","children","sort","a","b","salaryA","getAttribute","salaryB","forEach","elem","appendChild","map","item","name","textContent","trim","position","salary","age"],"version":3,"file":"index.fc0b07b1.js.map"}